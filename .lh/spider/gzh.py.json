{
    "sourceFile": "spider/gzh.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 20,
            "patches": [
                {
                    "date": 1744619497006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744619534085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,10 @@\n     \"type\": \"9\",\r\n }\r\n goal = [\r\n     {name:\"奔腾融媒\",fakeid:\"MjM5NTQ4MTQyMg==\",token:\"1671697423\"},\r\n-    {name:\"新华网\",fakeid:\"MjM5NzI3NDg4MA==\",token:\"1671697423\"}]\r\n+    {name:\"新华网\",fakeid:\"MjM5NzI3NDg4MA==\",token:\"1671697423\"}\r\n+]\r\n '''\r\n ### 奔腾融媒\r\n fake_id\r\n MjM5NTQ4MTQyMg==\r\n@@ -94,15 +95,16 @@\n             print(f\"已爬取 {total_fetched} 篇文章，休息 {pause_time / 60} 分钟...\")\r\n             time.sleep(pause_time)  # 暂停 5 分钟（300秒）\r\n             total_fetched = 0  # 重置计数器\r\n \r\n-def run():\r\n+def run(_goal):\r\n     # 创建 CSV 文件并写入标题行\r\n     df = pd.DataFrame(columns=['title', 'link', 'create_time'])\r\n     df.to_csv(\"data.csv\", mode='w', index=False, encoding='utf-8')\r\n \r\n     count = get_total_count()\r\n     get_content_list(count)\r\n \r\n if __name__ == \"__main__\":\r\n-    run()\r\n+    gloab goal\r\n+    run(goal)\r\n \r\n"
                },
                {
                    "date": 1744620872208,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,10 +34,10 @@\n     \"fakeid\": \"MjM5NTQ4MTQyMg==\",  # 自己的号，设置为空\r\n     \"type\": \"9\",\r\n }\r\n goal = [\r\n-    {name:\"奔腾融媒\",fakeid:\"MjM5NTQ4MTQyMg==\",token:\"1671697423\"},\r\n-    {name:\"新华网\",fakeid:\"MjM5NzI3NDg4MA==\",token:\"1671697423\"}\r\n+    {name:\"奔腾融媒\",fakeid:\"MjM5NTQ4MTQyMg==\",token:\"1671697423\",title=\"\"},\r\n+    {name:\"新华网\",fakeid:\"MjM5NzI3NDg4MA==\",token:\"1671697423\",title=\"\"}\r\n ]\r\n '''\r\n ### 奔腾融媒\r\n fake_id\r\n"
                },
                {
                    "date": 1744620911287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n     return count\r\n \r\n \r\n # 每 20 篇文章休息 5 分钟\r\n-def get_content_list(count, per_page=5, pause_after=20, pause_time=10):\r\n+def get_content_list(title,count, per_page=5, pause_after=20, pause_time=10):\r\n     page = int(math.ceil(count / per_page))\r\n     total_fetched = 0\r\n \r\n     for i in tqdm(range(page), desc=\"获取文章列表\"):\r\n"
                },
                {
                    "date": 1744620921614,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,9 +101,9 @@\n     df = pd.DataFrame(columns=['title', 'link', 'create_time'])\r\n     df.to_csv(\"data.csv\", mode='w', index=False, encoding='utf-8')\r\n \r\n     count = get_total_count()\r\n-    get_content_list(count)\r\n+    get_content_list(title,count)\r\n \r\n if __name__ == \"__main__\":\r\n     gloab goal\r\n     run(goal)\r\n"
                },
                {
                    "date": 1744621150142,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,9 +97,9 @@\n             total_fetched = 0  # 重置计数器\r\n \r\n def run(_goal):\r\n     # 创建 CSV 文件并写入标题行\r\n-    df = pd.DataFrame(columns=['title', 'link', 'create_time'])\r\n+    df = pd.DataFrame(columns=['title', 'content', 'link', 'create_time'])\r\n     df.to_csv(\"data.csv\", mode='w', index=False, encoding='utf-8')\r\n \r\n     count = get_total_count()\r\n     get_content_list(title,count)\r\n"
                },
                {
                    "date": 1744621159225,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,9 +97,9 @@\n             total_fetched = 0  # 重置计数器\r\n \r\n def run(_goal):\r\n     # 创建 CSV 文件并写入标题行\r\n-    df = pd.DataFrame(columns=['title', 'content', 'link', 'create_time'])\r\n+    df = pd.DataFrame(columns=['title', 'content', 'link', 'publish_time'])\r\n     df.to_csv(\"data.csv\", mode='w', index=False, encoding='utf-8')\r\n \r\n     count = get_total_count()\r\n     get_content_list(title,count)\r\n"
                },
                {
                    "date": 1744621165929,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,9 +97,9 @@\n             total_fetched = 0  # 重置计数器\r\n \r\n def run(_goal):\r\n     # 创建 CSV 文件并写入标题行\r\n-    df = pd.DataFrame(columns=['title', 'content', 'link', 'publish_time'])\r\n+    df = pd.DataFrame(columns=['title', 'content', 'link', 'published_time'])\r\n     df.to_csv(\"data.csv\", mode='w', index=False, encoding='utf-8')\r\n \r\n     count = get_total_count()\r\n     get_content_list(title,count)\r\n"
                },
                {
                    "date": 1744621184807,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,9 +97,9 @@\n             total_fetched = 0  # 重置计数器\r\n \r\n def run(_goal):\r\n     # 创建 CSV 文件并写入标题行\r\n-    df = pd.DataFrame(columns=['title', 'content', 'link', 'published_time'])\r\n+    df = pd.DataFrame(columns=['title', 'content', 'url', 'published_time'])\r\n     df.to_csv(\"data.csv\", mode='w', index=False, encoding='utf-8')\r\n \r\n     count = get_total_count()\r\n     get_content_list(title,count)\r\n"
                },
                {
                    "date": 1744621194860,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n \r\n         # 实时将数据保存到 CSV 文件中\r\n         for item in app_msg_list:\r\n             title = item[\"title\"]\r\n-            link = item[\"link\"]\r\n+            link = item[\"url\"]\r\n             create_time = time.strftime(\"%Y-%m-%d %H:%M\", time.localtime(item[\"create_time\"]))\r\n             if create_time > \"2025-04-03\":\r\n                 return \r\n             result = [[title, link, create_time]]\r\n"
                },
                {
                    "date": 1744621220641,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,13 +77,13 @@\n         # 实时将数据保存到 CSV 文件中\r\n         for item in app_msg_list:\r\n             title = item[\"title\"]\r\n             link = item[\"url\"]\r\n-            create_time = time.strftime(\"%Y-%m-%d %H:%M\", time.localtime(item[\"create_time\"]))\r\n+            create_time = time.strftime(\"%Y-%m-%d %H:%M\", time.localtime(item[\"published_time\"]))\r\n             if create_time > \"2025-04-03\":\r\n                 return \r\n             result = [[title, link, create_time]]\r\n-            df = pd.DataFrame(result, columns=['title', 'link', 'create_time'])\r\n+            df = pd.DataFrame(result, columns=['title', 'url', 'published_time'])\r\n             df.to_csv(\"data.csv\", mode='a', header=False, index=False, encoding='utf-8')  # 追加模式写入\r\n \r\n         # 延长请求间隔时间，模拟更自然的行为\r\n         delay = random.uniform(20, 30)  # 延迟10-20秒s\r\n"
                },
                {
                    "date": 1744621384145,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,10 +34,10 @@\n     \"fakeid\": \"MjM5NTQ4MTQyMg==\",  # 自己的号，设置为空\r\n     \"type\": \"9\",\r\n }\r\n goal = [\r\n-    {name:\"奔腾融媒\",fakeid:\"MjM5NTQ4MTQyMg==\",token:\"1671697423\",title=\"\"},\r\n-    {name:\"新华网\",fakeid:\"MjM5NzI3NDg4MA==\",token:\"1671697423\",title=\"\"}\r\n+    {name:\"奔腾融媒\",fakeid:\"MjM5NTQ4MTQyMg==\",token:\"1671697423\",title:\"\"},\r\n+    {name:\"新华网\",fakeid:\"MjM5NzI3NDg4MA==\",token:\"1671697423\",title:\"\"}\r\n ]\r\n '''\r\n ### 奔腾融媒\r\n fake_id\r\n"
                },
                {
                    "date": 1744621399061,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,7 +104,7 @@\n     count = get_total_count()\r\n     get_content_list(title,count)\r\n \r\n if __name__ == \"__main__\":\r\n-    gloab goal\r\n+    global goal\r\n     run(goal)\r\n \r\n"
                },
                {
                    "date": 1744621426183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,7 +104,7 @@\n     count = get_total_count()\r\n     get_content_list(title,count)\r\n \r\n if __name__ == \"__main__\":\r\n-    global goal\r\n+    #global goal\r\n     run(goal)\r\n \r\n"
                },
                {
                    "date": 1744621521939,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,10 +34,10 @@\n     \"fakeid\": \"MjM5NTQ4MTQyMg==\",  # 自己的号，设置为空\r\n     \"type\": \"9\",\r\n }\r\n goal = [\r\n-    {name:\"奔腾融媒\",fakeid:\"MjM5NTQ4MTQyMg==\",token:\"1671697423\",title:\"\"},\r\n-    {name:\"新华网\",fakeid:\"MjM5NzI3NDg4MA==\",token:\"1671697423\",title:\"\"}\r\n+    {'name':\"奔腾融媒\",'fakeid':\"MjM5NTQ4MTQyMg==\",'token':\"1671697423\",'title':\"\"},\r\n+    {'name':\"新华网\",'fakeid':\"MjM5NzI3NDg4MA==\",'token':\"1671697423\",'title':\"\"}\r\n ]\r\n '''\r\n ### 奔腾融媒\r\n fake_id\r\n"
                },
                {
                    "date": 1744621638425,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,8 +53,9 @@\n \r\n def get_total_count():\r\n     headers[\"User-Agent\"] = random.choice(USER_AGENTS)  # 每次请求动态更改 User-Agent\r\n     content_json = requests.get(url, headers=headers, params=data).json()\r\n+    print(content_json)\r\n     count = int(content_json[\"app_msg_cnt\"])\r\n     return count\r\n \r\n \r\n"
                },
                {
                    "date": 1744621739096,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n url = \"https://mp.weixin.qq.com/cgi-bin/appmsg\"\r\n cookie = \"RK=dlfU1pDcV3; ptcz=9517a0b290759e72516957e5dd203760d910532ed6afca125d0dea8a3565ba62; o_cookie=1405516353; ua_id=aKMsAWXyRexPYnSfAAAAAGeSLBpuZpwL1qrxsnYcRsE=; mm_lang=zh_CN; _qimei_uuid42=18910121904100935264fc3c36652549cce33bf35b; pac_uid=0_cdmi2NWSefEmp; _qimei_q36=; _qimei_h38=4ba6c57d5264fc3c3665254902000007c18910; wxuin=27151621520234; suid=user_0_cdmi2NWSefEmp; pgv_pvid=8440601090; _qimei_fingerprint=1facd17b55437bdf315b976665efb89b; _clck=3874745028|1|fur|0; uuid=0edd37f29d7b9958afc9cecaef495e05; rand_info=CAESIOgn7QHJFWtKBgjvX4b9vTrlQzsdYLDzeJs/NaXzGMza; slave_bizuin=3874745028; data_bizuin=3874745028; bizuin=3874745028; data_ticket=cxNoBKPN6/QILfbytifr5eDOI4rHPwringdaBcyH3MfAECCz0Pf3AQWtFWgh5d6n; slave_sid=WUFlajMxbUIybFdDZjhCY1ByNWV1SXpFT0Zzd0FiMU1vUFI2OWhIX1BHa2NoMGJ0a2hfOXpOT0xidndjbmxQQWZFVENPWHdlY21Bem5ZTE1UbzB4YVVsTGNZSFhsRjFFYmlzb2VMRm05WnJITWhMX1k1T1c1dGdCc1ZpeEZib3o1TERuZXJScFVOVXdFQ3Nz; slave_user=gh_eb1d91fa6413; xid=871480bf77d4538d6699e930d0607424; _clsk=mtlj0b|1743667462410|5|1|mp.weixin.qq.com/weheat-agent/payload/record; rewardsn=; wxtokenkey=777\"\r\n \r\n headers = {\r\n-    \"Cookie\": cookie,\r\n+    #\"Cookie\": cookie,\r\n }\r\n \r\n data = {\r\n     \"token\": \"1671697423\",\r\n"
                },
                {
                    "date": 1744624333116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n ]\r\n \r\n # 目标url\r\n url = \"https://mp.weixin.qq.com/cgi-bin/appmsg\"\r\n-cookie = \"RK=dlfU1pDcV3; ptcz=9517a0b290759e72516957e5dd203760d910532ed6afca125d0dea8a3565ba62; o_cookie=1405516353; ua_id=aKMsAWXyRexPYnSfAAAAAGeSLBpuZpwL1qrxsnYcRsE=; mm_lang=zh_CN; _qimei_uuid42=18910121904100935264fc3c36652549cce33bf35b; pac_uid=0_cdmi2NWSefEmp; _qimei_q36=; _qimei_h38=4ba6c57d5264fc3c3665254902000007c18910; wxuin=27151621520234; suid=user_0_cdmi2NWSefEmp; pgv_pvid=8440601090; _qimei_fingerprint=1facd17b55437bdf315b976665efb89b; _clck=3874745028|1|fur|0; uuid=0edd37f29d7b9958afc9cecaef495e05; rand_info=CAESIOgn7QHJFWtKBgjvX4b9vTrlQzsdYLDzeJs/NaXzGMza; slave_bizuin=3874745028; data_bizuin=3874745028; bizuin=3874745028; data_ticket=cxNoBKPN6/QILfbytifr5eDOI4rHPwringdaBcyH3MfAECCz0Pf3AQWtFWgh5d6n; slave_sid=WUFlajMxbUIybFdDZjhCY1ByNWV1SXpFT0Zzd0FiMU1vUFI2OWhIX1BHa2NoMGJ0a2hfOXpOT0xidndjbmxQQWZFVENPWHdlY21Bem5ZTE1UbzB4YVVsTGNZSFhsRjFFYmlzb2VMRm05WnJITWhMX1k1T1c1dGdCc1ZpeEZib3o1TERuZXJScFVOVXdFQ3Nz; slave_user=gh_eb1d91fa6413; xid=871480bf77d4538d6699e930d0607424; _clsk=mtlj0b|1743667462410|5|1|mp.weixin.qq.com/weheat-agent/payload/record; rewardsn=; wxtokenkey=777\"\r\n+cookie = \"RK=dlfU1pDcV3; ptcz=9517a0b290759e72516957e5dd203760d910532ed6afca125d0dea8a3565ba62; o_cookie=1405516353; ua_id=aKMsAWXyRexPYnSfAAAAAGeSLBpuZpwL1qrxsnYcRsE=; mm_lang=zh_CN; _qimei_uuid42=18910121904100935264fc3c36652549cce33bf35b; pac_uid=0_cdmi2NWSefEmp; _qimei_q36=; _qimei_h38=4ba6c57d5264fc3c3665254902000007c18910; wxuin=27151621520234; suid=user_0_cdmi2NWSefEmp; pgv_pvid=8440601090; _qimei_fingerprint=1facd17b55437bdf315b976665efb89b; _clck=3874745028|1|fv2|0; uuid=d3b706a0d37203dd9da96631cfd3e859; rand_info=CAESIG0usVOBo0YcopWZd6uCujxyV3KdJzhqhlg9aC0Hayiv; slave_bizuin=3874745028; data_bizuin=3874745028; bizuin=3874745028; data_ticket=kMX3O9GkPtfTxVtxB//I7AWTXbZ+9w2JIDG2bS8DtVJldv6kEgzFushOZU4NPBGC; slave_sid=UHRTRHM5MmhVaXpkTjBFS2VxSDl4UmZWU29UdU1QRXo1V0xEZ1JtcEp6ZlEyYmcxYUFmV1oxajc2STFkM3pndDUyWGFWOWhZQThyaFZQZmZ0Y3pic200elUzaXVZRzZfXzVZUUZ2VDRmUU50YmFoOUk2ek9DdlpKeWY1Wk1tdHVwa1pERUVEa3BpRUZwbWFX; slave_user=gh_eb1d91fa6413; xid=b4c86fe03ed8b019e69ea59e695ba5a6; _clsk=1jol8p7|1744624279578|9|1|mp.weixin.qq.com/weheat-agent/payload/record\"\r\n \r\n headers = {\r\n     #\"Cookie\": cookie,\r\n }\r\n"
                },
                {
                    "date": 1744624338226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n url = \"https://mp.weixin.qq.com/cgi-bin/appmsg\"\r\n cookie = \"RK=dlfU1pDcV3; ptcz=9517a0b290759e72516957e5dd203760d910532ed6afca125d0dea8a3565ba62; o_cookie=1405516353; ua_id=aKMsAWXyRexPYnSfAAAAAGeSLBpuZpwL1qrxsnYcRsE=; mm_lang=zh_CN; _qimei_uuid42=18910121904100935264fc3c36652549cce33bf35b; pac_uid=0_cdmi2NWSefEmp; _qimei_q36=; _qimei_h38=4ba6c57d5264fc3c3665254902000007c18910; wxuin=27151621520234; suid=user_0_cdmi2NWSefEmp; pgv_pvid=8440601090; _qimei_fingerprint=1facd17b55437bdf315b976665efb89b; _clck=3874745028|1|fv2|0; uuid=d3b706a0d37203dd9da96631cfd3e859; rand_info=CAESIG0usVOBo0YcopWZd6uCujxyV3KdJzhqhlg9aC0Hayiv; slave_bizuin=3874745028; data_bizuin=3874745028; bizuin=3874745028; data_ticket=kMX3O9GkPtfTxVtxB//I7AWTXbZ+9w2JIDG2bS8DtVJldv6kEgzFushOZU4NPBGC; slave_sid=UHRTRHM5MmhVaXpkTjBFS2VxSDl4UmZWU29UdU1QRXo1V0xEZ1JtcEp6ZlEyYmcxYUFmV1oxajc2STFkM3pndDUyWGFWOWhZQThyaFZQZmZ0Y3pic200elUzaXVZRzZfXzVZUUZ2VDRmUU50YmFoOUk2ek9DdlpKeWY1Wk1tdHVwa1pERUVEa3BpRUZwbWFX; slave_user=gh_eb1d91fa6413; xid=b4c86fe03ed8b019e69ea59e695ba5a6; _clsk=1jol8p7|1744624279578|9|1|mp.weixin.qq.com/weheat-agent/payload/record\"\r\n \r\n headers = {\r\n-    #\"Cookie\": cookie,\r\n+    \"Cookie\": cookie,\r\n }\r\n \r\n data = {\r\n     \"token\": \"1671697423\",\r\n"
                },
                {
                    "date": 1744624700367,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,10 @@\n ]\r\n \r\n # 目标url\r\n url = \"https://mp.weixin.qq.com/cgi-bin/appmsg\"\r\n-cookie = \"RK=dlfU1pDcV3; ptcz=9517a0b290759e72516957e5dd203760d910532ed6afca125d0dea8a3565ba62; o_cookie=1405516353; ua_id=aKMsAWXyRexPYnSfAAAAAGeSLBpuZpwL1qrxsnYcRsE=; mm_lang=zh_CN; _qimei_uuid42=18910121904100935264fc3c36652549cce33bf35b; pac_uid=0_cdmi2NWSefEmp; _qimei_q36=; _qimei_h38=4ba6c57d5264fc3c3665254902000007c18910; wxuin=27151621520234; suid=user_0_cdmi2NWSefEmp; pgv_pvid=8440601090; _qimei_fingerprint=1facd17b55437bdf315b976665efb89b; _clck=3874745028|1|fv2|0; uuid=d3b706a0d37203dd9da96631cfd3e859; rand_info=CAESIG0usVOBo0YcopWZd6uCujxyV3KdJzhqhlg9aC0Hayiv; slave_bizuin=3874745028; data_bizuin=3874745028; bizuin=3874745028; data_ticket=kMX3O9GkPtfTxVtxB//I7AWTXbZ+9w2JIDG2bS8DtVJldv6kEgzFushOZU4NPBGC; slave_sid=UHRTRHM5MmhVaXpkTjBFS2VxSDl4UmZWU29UdU1QRXo1V0xEZ1JtcEp6ZlEyYmcxYUFmV1oxajc2STFkM3pndDUyWGFWOWhZQThyaFZQZmZ0Y3pic200elUzaXVZRzZfXzVZUUZ2VDRmUU50YmFoOUk2ek9DdlpKeWY1Wk1tdHVwa1pERUVEa3BpRUZwbWFX; slave_user=gh_eb1d91fa6413; xid=b4c86fe03ed8b019e69ea59e695ba5a6; _clsk=1jol8p7|1744624279578|9|1|mp.weixin.qq.com/weheat-agent/payload/record\"\r\n+cookie = \"RK=dlfU1pDcV3; ptcz=9517a0b290759e72516957e5dd203760d910532ed6afca125d0dea8a3565ba62; o_cookie=1405516353; ua_id=aKMsAWXyRexPYnSfAAAAAGeSLBpuZpwL1qrxsnYcRsE=; mm_lang=zh_CN; _qimei_uuid42=18910121904100935264fc3c36652549cce33bf35b; pac_uid=0_cdmi2NWSefEmp; _qimei_q36=; _qimei_h38=4ba6c57d5264fc3c3665254902000007c18910; wxuin=27151621520234; suid=user_0_cdmi2NWSefEmp; pgv_pvid=8440601090; _qimei_fingerprint=1facd17b55437bdf315b976665efb89b; _clck=3874745028|1|fv2|0; uuid=d3b706a0d37203dd9da96631cfd3e859; rand_info=CAESIG0usVOBo0YcopWZd6uCujxyV3KdJzhqhlg9aC0Hayiv; slave_bizuin=3874745028; data_bizuin=3874745028; bizuin=3874745028; data_ticket=kMX3O9GkPtfTxVtxB//I7AWTXbZ+9w2JIDG2bS8DtVJldv6kEgzFushOZU4NPBGC; slave_sid=UHRTRHM5MmhVaXpkTjBFS2VxSDl4UmZWU29UdU1QRXo1V0xEZ1JtcEp6ZlEyYmcxYUFmV1oxajc2STFkM3pndDUyWGFWOWhZQThyaFZQZmZ0Y3pic200elUzaXVZRzZfXzVZUUZ2VDRmUU50YmFoOUk2ek9DdlpKeWY1Wk1tdHVwa1pERUVEa3BpRUZwbWFX; slave_user=gh_eb1d91fa6413; xid=b4c86fe03ed8b019e69ea59e695ba5a6; _clsk=1jol8p7|1744624279578|9|1|mp.weixin.qq.com/weheat-agent/payload/record\r\n+\"\r\n \r\n headers = {\r\n     \"Cookie\": cookie,\r\n }\r\n"
                },
                {
                    "date": 1744624754906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,10 +15,9 @@\n ]\r\n \r\n # 目标url\r\n url = \"https://mp.weixin.qq.com/cgi-bin/appmsg\"\r\n-cookie = \"RK=dlfU1pDcV3; ptcz=9517a0b290759e72516957e5dd203760d910532ed6afca125d0dea8a3565ba62; o_cookie=1405516353; ua_id=aKMsAWXyRexPYnSfAAAAAGeSLBpuZpwL1qrxsnYcRsE=; mm_lang=zh_CN; _qimei_uuid42=18910121904100935264fc3c36652549cce33bf35b; pac_uid=0_cdmi2NWSefEmp; _qimei_q36=; _qimei_h38=4ba6c57d5264fc3c3665254902000007c18910; wxuin=27151621520234; suid=user_0_cdmi2NWSefEmp; pgv_pvid=8440601090; _qimei_fingerprint=1facd17b55437bdf315b976665efb89b; _clck=3874745028|1|fv2|0; uuid=d3b706a0d37203dd9da96631cfd3e859; rand_info=CAESIG0usVOBo0YcopWZd6uCujxyV3KdJzhqhlg9aC0Hayiv; slave_bizuin=3874745028; data_bizuin=3874745028; bizuin=3874745028; data_ticket=kMX3O9GkPtfTxVtxB//I7AWTXbZ+9w2JIDG2bS8DtVJldv6kEgzFushOZU4NPBGC; slave_sid=UHRTRHM5MmhVaXpkTjBFS2VxSDl4UmZWU29UdU1QRXo1V0xEZ1JtcEp6ZlEyYmcxYUFmV1oxajc2STFkM3pndDUyWGFWOWhZQThyaFZQZmZ0Y3pic200elUzaXVZRzZfXzVZUUZ2VDRmUU50YmFoOUk2ek9DdlpKeWY1Wk1tdHVwa1pERUVEa3BpRUZwbWFX; slave_user=gh_eb1d91fa6413; xid=b4c86fe03ed8b019e69ea59e695ba5a6; _clsk=1jol8p7|1744624279578|9|1|mp.weixin.qq.com/weheat-agent/payload/record\r\n-\"\r\n+cookie = \"RK=dlfU1pDcV3; ptcz=9517a0b290759e72516957e5dd203760d910532ed6afca125d0dea8a3565ba62; o_cookie=1405516353; ua_id=aKMsAWXyRexPYnSfAAAAAGeSLBpuZpwL1qrxsnYcRsE=; mm_lang=zh_CN; _qimei_uuid42=18910121904100935264fc3c36652549cce33bf35b; pac_uid=0_cdmi2NWSefEmp; _qimei_q36=; _qimei_h38=4ba6c57d5264fc3c3665254902000007c18910; wxuin=27151621520234; suid=user_0_cdmi2NWSefEmp; pgv_pvid=8440601090; _qimei_fingerprint=1facd17b55437bdf315b976665efb89b; _clck=3874745028|1|fv2|0; uuid=d3b706a0d37203dd9da96631cfd3e859; rand_info=CAESIG0usVOBo0YcopWZd6uCujxyV3KdJzhqhlg9aC0Hayiv; slave_bizuin=3874745028; data_bizuin=3874745028; bizuin=3874745028; data_ticket=kMX3O9GkPtfTxVtxB//I7AWTXbZ+9w2JIDG2bS8DtVJldv6kEgzFushOZU4NPBGC; slave_sid=UHRTRHM5MmhVaXpkTjBFS2VxSDl4UmZWU29UdU1QRXo1V0xEZ1JtcEp6ZlEyYmcxYUFmV1oxajc2STFkM3pndDUyWGFWOWhZQThyaFZQZmZ0Y3pic200elUzaXVZRzZfXzVZUUZ2VDRmUU50YmFoOUk2ek9DdlpKeWY1Wk1tdHVwa1pERUVEa3BpRUZwbWFX; slave_user=gh_eb1d91fa6413; xid=b4c86fe03ed8b019e69ea59e695ba5a6; _clsk=1jol8p7|1744624279578|9|1|mp.weixin.qq.com/weheat-agent/payload/record\"\r\n \r\n headers = {\r\n     \"Cookie\": cookie,\r\n }\r\n"
                }
            ],
            "date": 1744619497006,
            "name": "Commit-0",
            "content": "import requests\r\nimport json\r\nimport math\r\nimport time\r\nimport random\r\nfrom tqdm import tqdm\r\nimport pandas as pd\r\n\r\n# 可选的User-Agent列表\r\nUSER_AGENTS = [\r\n    \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3\",\r\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1.2 Safari/605.1.15\",\r\n    \"Mozilla/5.0 (iPhone; CPU iPhone OS 12_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1.1 Mobile/15E148 Safari/604.1\",\r\n    \"Mozilla/5.0 (Linux; Android 9; Pixel 3 XL) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Mobile Safari/537.36\",\r\n]\r\n\r\n# 目标url\r\nurl = \"https://mp.weixin.qq.com/cgi-bin/appmsg\"\r\ncookie = \"RK=dlfU1pDcV3; ptcz=9517a0b290759e72516957e5dd203760d910532ed6afca125d0dea8a3565ba62; o_cookie=1405516353; ua_id=aKMsAWXyRexPYnSfAAAAAGeSLBpuZpwL1qrxsnYcRsE=; mm_lang=zh_CN; _qimei_uuid42=18910121904100935264fc3c36652549cce33bf35b; pac_uid=0_cdmi2NWSefEmp; _qimei_q36=; _qimei_h38=4ba6c57d5264fc3c3665254902000007c18910; wxuin=27151621520234; suid=user_0_cdmi2NWSefEmp; pgv_pvid=8440601090; _qimei_fingerprint=1facd17b55437bdf315b976665efb89b; _clck=3874745028|1|fur|0; uuid=0edd37f29d7b9958afc9cecaef495e05; rand_info=CAESIOgn7QHJFWtKBgjvX4b9vTrlQzsdYLDzeJs/NaXzGMza; slave_bizuin=3874745028; data_bizuin=3874745028; bizuin=3874745028; data_ticket=cxNoBKPN6/QILfbytifr5eDOI4rHPwringdaBcyH3MfAECCz0Pf3AQWtFWgh5d6n; slave_sid=WUFlajMxbUIybFdDZjhCY1ByNWV1SXpFT0Zzd0FiMU1vUFI2OWhIX1BHa2NoMGJ0a2hfOXpOT0xidndjbmxQQWZFVENPWHdlY21Bem5ZTE1UbzB4YVVsTGNZSFhsRjFFYmlzb2VMRm05WnJITWhMX1k1T1c1dGdCc1ZpeEZib3o1TERuZXJScFVOVXdFQ3Nz; slave_user=gh_eb1d91fa6413; xid=871480bf77d4538d6699e930d0607424; _clsk=mtlj0b|1743667462410|5|1|mp.weixin.qq.com/weheat-agent/payload/record; rewardsn=; wxtokenkey=777\"\r\n\r\nheaders = {\r\n    \"Cookie\": cookie,\r\n}\r\n\r\ndata = {\r\n    \"token\": \"1671697423\",\r\n    \"lang\": \"zh_CN\",\r\n    \"f\": \"json\",\r\n    \"ajax\": \"1\",\r\n    \"action\": \"list_ex\",\r\n    \"begin\": \"0\",\r\n    \"count\": \"20\",\r\n    \"query\": \"\",\r\n    \"fakeid\": \"MjM5NTQ4MTQyMg==\",  # 自己的号，设置为空\r\n    \"type\": \"9\",\r\n}\r\ngoal = [\r\n    {name:\"奔腾融媒\",fakeid:\"MjM5NTQ4MTQyMg==\",token:\"1671697423\"},\r\n    {name:\"新华网\",fakeid:\"MjM5NzI3NDg4MA==\",token:\"1671697423\"}]\r\n'''\r\n### 奔腾融媒\r\nfake_id\r\nMjM5NTQ4MTQyMg==\r\ntoken\r\n1671697423\r\n### 新华网\r\nfake_id\r\nMjM5NzI3NDg4MA==\r\ntoken\r\n1671697423\r\n'''\r\n\r\ndef get_total_count():\r\n    headers[\"User-Agent\"] = random.choice(USER_AGENTS)  # 每次请求动态更改 User-Agent\r\n    content_json = requests.get(url, headers=headers, params=data).json()\r\n    count = int(content_json[\"app_msg_cnt\"])\r\n    return count\r\n\r\n\r\n# 每 20 篇文章休息 5 分钟\r\ndef get_content_list(count, per_page=5, pause_after=20, pause_time=10):\r\n    page = int(math.ceil(count / per_page))\r\n    total_fetched = 0\r\n\r\n    for i in tqdm(range(page), desc=\"获取文章列表\"):\r\n        data[\"begin\"] = i * per_page\r\n        headers[\"User-Agent\"] = random.choice(USER_AGENTS)  # 每次请求动态更改 User-Agent\r\n        content_json = requests.get(url, headers=headers, params=data).json()\r\n        app_msg_list = content_json[\"app_msg_list\"]\r\n        total_fetched += len(app_msg_list)\r\n        \r\n        # 保存成json\r\n        with open(\"content_list.json\", \"w\", encoding=\"utf-8\") as f:\r\n            json.dump(app_msg_list, f, ensure_ascii=False, indent=4)\r\n\r\n        # 实时将数据保存到 CSV 文件中\r\n        for item in app_msg_list:\r\n            title = item[\"title\"]\r\n            link = item[\"link\"]\r\n            create_time = time.strftime(\"%Y-%m-%d %H:%M\", time.localtime(item[\"create_time\"]))\r\n            if create_time > \"2025-04-03\":\r\n                return \r\n            result = [[title, link, create_time]]\r\n            df = pd.DataFrame(result, columns=['title', 'link', 'create_time'])\r\n            df.to_csv(\"data.csv\", mode='a', header=False, index=False, encoding='utf-8')  # 追加模式写入\r\n\r\n        # 延长请求间隔时间，模拟更自然的行为\r\n        delay = random.uniform(20, 30)  # 延迟10-20秒s\r\n        print(f\"等待 {delay:.2f} 秒后继续...\")\r\n        time.sleep(delay)\r\n        \r\n        # 每爬取 pause_after 篇文章后，暂停 pause_time 秒\r\n        if total_fetched >= pause_after:\r\n            print(f\"已爬取 {total_fetched} 篇文章，休息 {pause_time / 60} 分钟...\")\r\n            time.sleep(pause_time)  # 暂停 5 分钟（300秒）\r\n            total_fetched = 0  # 重置计数器\r\n\r\ndef run():\r\n    # 创建 CSV 文件并写入标题行\r\n    df = pd.DataFrame(columns=['title', 'link', 'create_time'])\r\n    df.to_csv(\"data.csv\", mode='w', index=False, encoding='utf-8')\r\n\r\n    count = get_total_count()\r\n    get_content_list(count)\r\n\r\nif __name__ == \"__main__\":\r\n    run()\r\n\r\n"
        }
    ]
}